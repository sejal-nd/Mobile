
skip_docs # skip autogenerating the README.md, we are manually writing it

default_platform(:ios)
  platform :ios do
    desc "Upload a pre-built IPA to the App Store and tag release"
    lane :uploadBuild do |options|
      deliver(
        api_key_path: options[:api_key_path],
        app_identifier: options[:bundle_id],
        ipa: options[:ipa_path],
        metadata_path: options[:metadata_path],
        team_id: "YU7Y757VB5",
        submit_for_review: true,
        skip_screenshots: true,
        ignore_language_directory_validation: true,
        run_precheck_before_submit: false,
        precheck_include_in_app_purchases: false,
        force: true
      )

      tag_release
    end

    desc "Adds a git tag of the Xcode project number, e.g. 5.10.0"
    lane :tag_release do
      version = get_version_number(
        target: "EUMobile"
      )

      if !git_tag_exists(tag: version)
        # Tags git release commit: ex: 5.10.0
        add_git_tag(
          tag: version,
          includes_lane: false
        )

        push_git_tags
      end
    end

    desc "Package and build the app, resulting in an IPA file"
    lane :package do |options|
      build_app(
        workspace: "Mobile.xcworkspace",
        configuration: options[:configuration],
        scheme: options[:scheme],
        silent: true,
        output_directory: options[:output_directory], # Destination directory. Defaults to current directory.
        output_name: "EUMobile.ipa", # Specify the name of the .ipa file to generate (including file extension)
        export_options: options[:export_options_path] # Path to export Plist
      )
    end

    desc "Upload a pre-built IPA and DSYM Zip to App Center and distribute"
    lane :app_center_upload do |options|
      appcenter_upload(
        api_token: options[:app_center_api_token],
        owner_name: "Exelon-Digital-Projects",
        owner_type: "organization",
        app_name: options[:app_name],
        file: options[:file_path],
        release_notes: sh("cat fastlane/ReleaseNotes.md"),#options[:release_notes],
        destinations: options[:destinations],
        dsym: options[:dsym_path]
      )
    end
  end
