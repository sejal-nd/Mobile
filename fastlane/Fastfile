# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Generate new localized screenshots -> Increment version number -> setup certs + profiles -> Create IPA -> Upload to App Store"
  lane :uploadBuild do
    update_fastlane

    get_certificates(           # invokes cert
      username: "jerlandson5205@gmail.com",
      team_name: "EXELON BUSINESS SERVICES COMPANY, LLC",
      output_path: "./fastlane/certs"
    )
    get_provisioning_profile(   # invokes sigh
      username: "jerlandson5205@gmail.com",
      team_name: "EXELON BUSINESS SERVICES COMPANY, LLC",
      app_identifier: ENV["APP_IDENTIFIER"],
      output_path: "./fastlane/provisioningProfiles"
    )
    capture_screenshots(
      workspace: "Mobile.xcworkspace",
      scheme: ENV["SCREENSHOT_SCHEME"],
      output_directory: "./fastlane/screenshots"
    )
    # increment_version_number
    # build_ios_app(
    #   scheme: ENV["RELEASE_SCHEME"],
    #   silent: false,
    #   clean: true,
    #   include_bitcode: true,
    #   skip_build_archive: true,
    #   export_method: "app-store",
    #   # export_options: {
    #   #   provisioningProfiles: {
    #   #     "com.exelon.mobile.bge.develop" => "Exelon Wildcard Dev Profile",
    #   #     "com.exelon.mobile.comed.develop" => "Exelon Wildcard Dev Profile",
    #   #     "com.exelon.mobile.peco.develop" => "Exelon Wildcard Dev Profile"
    #   #   }
    #   # },
    #   archive_path: ENV["ARCHIVE_PATH"],
    #   output_directory: "./fastlane/IPA", # Destination directory. Defaults to current directory.
    #   output_name: "mobile.ipa",       # specify the name of the .ipa file to generate (including file extension)
    #   sdk: "iOS 10.0"        # use SDK as the name or path of the base SDK when building the project.
    # )
    # deliver(
    #   app_identifier: ENV["APP_IDENTIFIER"],
    #   ipa: "./fastlane/IPA/mobile.ipa", # Same as output directory above
    #   username: "jerlandson5205@gmail.com",
    #   submit_for_review: false,
    #   force: false,
    #   # metadata_path: ENV["METADATA_PATH"],
    #   screenshot_path: "./fastlane/screenshots"
    # )

    clean_build_artifacts
  end
end

platform :ios do
  desc "Refresh DSYMS"

	lane :refresh_dsyms do

		download_dsyms(version: "latest", app_identifier: ENV["app_identifier"]) # Download dSYM files from iTC
		unzip(file: Actions.lane_context[SharedValues::DSYM_PATHS][0], destination_path: "./" + ENV["app_identifier"] + ".dSYM")

		clean_build_artifacts

		appcenter_upload(
			api_token: ENV["TEST_APPCENTER_API_TOKEN"],
			owner_name: ENV["TEST_APPCENTER_OWNER_NAME"],
			app_name: ENV["TEST_APPCENTER_APP_NAME"],
			upload_dsym_only: true,
			dsym: "./" + ENV["app_identifier"] + ".dSYM"
		)
		clean_build_artifacts # cleans up artifacts
	end
end
